
/* gensym */

#if LISP_WANT_GENSYM

#ifdef LISP_NAMESPACE
namespace LISP_NAMESPACE {
#endif

class GensymImpl
{
public:
    GensymImpl(U64 type) : m_type(type), m_counter(0)
    {
    }

    inline bool isinstance(Expr exp) const
    {
        return expr_type(exp) == m_type;
    }

    func make(): Expr
    {
        U64 const data = m_counter++;
        return make_expr(m_type, data);
    }

private:
    var m_type: U64;
    var m_counter: U64;
};

#if LISP_WANT_GLOBAL_API

var g_gensym: GensymImpl(TYPE_GENSYM);

func is_gensym(exp: Expr): bool
{
    return g_gensym.isinstance(exp);
}

func gensym(): Expr
{
    return g_gensym.make();
}

#endif

#ifdef LISP_NAMESPACE
}
#endif

#endif
