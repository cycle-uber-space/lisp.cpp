
#ifdef LISP_NAMESPACE
namespace LISP_NAMESPACE {
#endif

class EnvImpl
{
public:
    EnvImpl(ConsImpl & cons) : m_cons(cons)
    {
    }

    Expr make(Expr outer)
    {
        // ((<vars> . <vals>) . <outer>)
        // TODO add dummy conses as sentinels for vars and vals
        return cons(cons(nil, nil), outer);
    }

protected:
    Expr cons(Expr exp1, Expr exp2)
    {
        return m_cons.make(exp1, exp2);
    }

private:
    ConsImpl & m_cons;
};

template <typename T>
class EnvMixin
{
public:
    EnvMixin(EnvImpl & impl) : m_impl(impl)
    {
    }

    Expr make_env(Expr outer)
    {
        return m_impl.make(outer);
    }

private:
    EnvImpl & m_impl;
};

#if LISP_WANT_GLOBAL_API

EnvImpl g_env(g_cons);

#endif

#ifdef LISP_NAMESPACE
}
#endif
