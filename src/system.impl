
/* system */

#ifdef LISP_NAMESPACE
namespace LISP_NAMESPACE {
#endif

class SystemImpl
{
public:
    SystemImpl() :
        m_dummy(0)
    {
    }

    virtual ~SystemImpl()
    {
    }

    /* core */

    virtual Expr make_core_env()
    {
        return ::make_core_env();
    }

    /* util */

    // TODO use is_named_call()
    bool is_op(Expr exp, Expr name)
    {
        return is_cons(exp) && car(exp) == name;
    }

    bool is_quote(Expr exp)
    {
        return is_op(exp, LISP_SYM_QUOTE);
    }

    bool is_if(Expr exp)
    {
        return is_op(exp, LISP_SYM_IF);
    }

    var m_dummy: int;
};

/* system */

#if LISP_WANT_SYSTEM_API

System * System::s_instance = nullptr;

System::System()
{
    LISP_ASSERT(s_instance == nullptr);
    s_instance = this;

    m_impl = new SystemImpl();
}

System::~System()
{
    delete m_impl;

    s_instance = nullptr;
}

Expr System::make_core_env()
{
    return ::make_core_env();
}

#endif

#ifdef LISP_NAMESPACE
}
#endif
