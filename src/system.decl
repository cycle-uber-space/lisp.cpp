
/* system */

#if LISP_WANT_SYSTEM_API

#ifdef LISP_NAMESPACE
namespace LISP_NAMESPACE {
#endif

class SystemImpl;

class System
{
public:
    System();
    virtual ~System();

    /* env */

    virtual Expr make_core_env();

    void env_defun(Expr env, char const * name, BuiltinFunc func);
    void env_defun_println(Expr env, char const * name);
    void env_defspecial(Expr env, char const * name, BuiltinFunc func);
    void env_defspecial_quote(Expr env);
    void env_defspecial_while(Expr env);
    void env_defsym(Expr env, char const * name, BuiltinFunc func);

    /* eval */

    void load_file(char const * path, Expr env);
    void repl(Expr env);

private:
    SystemImpl * m_impl = nullptr;
    static var s_instance: System *;
};

#ifdef LISP_NAMESPACE
}
#endif

#endif
