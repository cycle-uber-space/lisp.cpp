
#ifdef LISP_NAMESPACE
namespace LISP_NAMESPACE {
#endif

Expr make_float(F32 value)
{
    return make_expr(TYPE_FLOAT, f32_as_u32(value));
}

F32 float_value(Expr exp)
{
    LISP_ASSERT(is_float(exp));
    U64 const data = expr_data(exp);
    LISP_ASSERT_DEBUG((data & UINT64_C(0xffffffff)) == data);
    return u32_as_f32((U32) data);
}

Expr float_neg(Expr a)
{
    // TODO? just flip the sign bit
    return make_float(-float_value(a));
}

Expr float_add(Expr a, Expr b)
{
    return make_float(float_value(a) + float_value(b));
}

Expr float_sub(Expr a, Expr b)
{
    return make_float(float_value(a) - float_value(b));
}

Expr float_mul(Expr a, Expr b)
{
    return make_float(float_value(a) * float_value(b));
}

Expr float_div(Expr a, Expr b)
{
    return make_float(float_value(a) / float_value(b));
}

#ifdef LISP_NAMESPACE
}
#endif
